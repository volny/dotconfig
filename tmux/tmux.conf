set -g default-terminal "screen-256color"
# set default shell to zsh
set -g default-command /usr/local/bin/zsh
set -g default-shell /usr/local/bin/zsh

setw -g xterm-keys on
set -sg escape-time 10
set -sg repeat-time 600
set -s focus-events on

set -g status-keys vi
set -g mode-keys vi

set -q -g status-utf8 on
setw -q -g utf8 on

set -g mouse on

set -g history-limit 5000

# start windows numbering at 1
set -g base-index 1
# make pane numbering consistent with windows
setw -g pane-base-index 1

# rename window to reflect current program
setw -g automatic-rename on
# renumber windows when a window is closed
set -g renumber-windows on

bind-key M swap-window -tjj

# set terminal title
set -g set-titles on
set -g set-titles-string '#h ‚ùê #S ‚óè #I #W'

# slightly longer pane indicators display time
set -g display-panes-time 800
# slightly longer status messages display time
set -g display-time 1000

set -g monitor-activity on
set -g visual-activity off

# pane separator
set -g pane-border-style bg="#1f2c24",fg="#1f2c24"
set -g pane-active-border-style bg="#1f2c24",fg="#1f2c24"

# change bg color for focused window
set -g pane-border-style fg="#1f2c24"
set -g window-active-style 'fg=#95a5a6,bg=#152c1e'

set -g message-style fg="#333333"
set -g message-style bg="#1f2c24"
# set -g message-style attr=bold

#==================================================
# PANES/WINDOWS/SESSIONS
#==================================================

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split current window horizontally
bind _ split-window -v -c "#{pane_current_path}"
# split current window vertically
bind - split-window -h -c "#{pane_current_path}"

# move window order around
bind-key < swap-window -t -
bind-key > swap-window -t +

# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

bind -n C-z resize-pane -Z

bind -r n next-window
bind -r N previous-window

bind b list-buffers
bind p paste-buffer
# choose from a list of buffers to paste from
bind P choose-buffer

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'

# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

#==================================================
# TMUX PLUGIN MANAGER
#==================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
# resurrect nvim sessions - https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
# goes together with https://github.com/tpope/vim-obsession
# DISABLED because annoying pane height issue when restarting nvim
# set -g @resurrect-strategy-nvim 'session'
# Restoring pane contents
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md
set -g @resurrect-capture-pane-contents 'off'
# Don't restore any programs:
set -g @resurrect-processes 'false'

set -g @plugin 'tmux-plugins/tmux-continuum'
# Last saved environment is automatically restored when tmux is started.
set -g @continuum-restore 'on'
# interval to save in minutes (default 15)
# set -g @continuum-save-interval '5'
# Tmux is automatically started after the computer/server is turned on
set -g @continuum-boot 'on'
# start iTerm instead of Terminal.app, fullscreen <https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md>
set -g @continuum-boot-options 'iterm,fullscreen'

set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

set -g @prefix_highlight_prefix_prompt 'Prefix'
set -g @prefix_highlight_fg '#b5bd68'
set -g @prefix_highlight_bg '#1f2c24'

set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_copy_mode_attr 'fg=#f43753,bg=#1f2c24'

#==================================================
# STATUS LINE
#==================================================

# powerline symbols  ÓÇ∞ ÓÇ± ÓÇ≤ ÓÇ≥

# move tmux status bar to the top!
# set-option -g status-position top
set-option -g status-position bottom

# colors
set -g status-style fg="#95a5a6"
# INVISIBLE status bar to make it empty
# set -g status-style fg="#1f2c24"
# set -g status-style bg="#1f2c24"

set -g status-interval 60     # redraw status line every 60 seconds

set -g status-left-length 32
set -g status-right-length 150

set -g status-left ' '

# currently open tab
set -g window-status-current-format "#[fg=#7bb292,bg=#1f2c24,noreverse] #I ÓÇ± #W "
# other tabs
# fg will inherit from status-fg, overwritten by 'activity' -> don't set here
set -g window-status-format "#[bg=#1f2c24] #I #W "

# when there's something going on in a tab
set -g window-status-activity-style 'bg=colour232,fg=#afbfc0,bold'
set -g window-status-activity-fg "#81a2be"

# time/date on the right
set -g status-right '#{prefix_highlight} #[fg=#95a5a6,bg=#1f2c24] %d.%m.#[fg=#95a5a6,bg=#1f2c24,bold] %H:%M  '

# toggle status line with ctrl-s
# TODO
# bind-key -n M-s set -g status
# bind-key -n S-C-s set -g status

#==================================================
# THE END üò¢
#==================================================

# source OS dependent config files
if-shell "uname | grep -q Darwin" "source-file $HOME/.config/tmux/.tmux-macos" "source-file $HOME/.config/tmux/.tmux-linux"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

# required for tmux resurrect, needs to be at very bottom of tmux.conf
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
